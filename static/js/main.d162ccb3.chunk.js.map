{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","redux/contacts-selectors.js","redux/contact-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","getContacts","state","contacts","items","getFilter","filter","filteredContacts","normalizedContact","toLowerCase","name","includes","addContact","createAction","deleteContact","changeFilter","ContactForm","onSubmit","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","target","value","resetForm","form","preventDefault","sameName","existName","nameNormalized","find","isExistName","contact","id","uuidv4","alert","contactsActions","label","input","type","onChange","button","Filter","ContactItem","onClick","ContactsList","map","App","ContactList","createReducer","payload","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d162ccb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1DjHn\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const filteredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedContact = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedContact),\r\n  );\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/add');\r\nexport const deleteContact = createAction('contacts/delete');\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts-selectors';\r\nimport * as contactsActions from '../../redux/contact-actions';\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const isExistName = existName => {\r\n    const nameNormalized = existName.toLowerCase();\r\n    return contacts.find(({ name }) => name.toLowerCase() === nameNormalized);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const sameName = isExistName(name);\r\n    const contact = { id: uuidv4(), name, number };\r\n\r\n    if (sameName) {\r\n      alert(`${name} is already in your phonebook`);\r\n    } else {\r\n      dispatch(contactsActions.addContact(contact));\r\n    }\r\n\r\n    if (contact === '') {\r\n      return alert('Enter contact');\r\n    }\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          name=\"name\"\r\n          value={name}\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <button className={s.button} type=\"submit\">\r\n        Add to contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts-selectors';\r\nimport * as contactsActions from '../../redux/contact-actions';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={value}\r\n        onChange={event =>\r\n          dispatch(contactsActions.changeFilter(event.target.value))\r\n        }\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ name, number, deleteContact }) => {\r\n  return (\r\n    <li>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button onClick={deleteContact}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as contactsActions from '../../redux/contact-actions';\r\nimport { filteredContacts } from '../../redux/contacts-selectors';\r\n\r\nconst ContactsList = () => {\r\n  const contacts = useSelector(filteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteContact = id => dispatch(contactsActions.deleteContact(id));\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          deleteContact={() => deleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactsList;\r\n","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nfunction App() {\n  return (\n    <Container>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './contact-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [payload, ...state],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import contactsReducer from './contacts-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__1zF8x\",\"button\":\"ContactForm_button__X-q9I\"};"],"sourceRoot":""}